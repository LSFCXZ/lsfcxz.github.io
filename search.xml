<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BFC规范</title>
    <url>/article/9221e461.html</url>
    <content><![CDATA[<p>BFC概念：</p>
<p>BFC(Box Formatting Context 会计格式化上下文)是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然。BFC是封闭在一个盒子里面，使网页布局达到一种稳定状态</p>
<p>四种方法：</p>
<ol>
<li>float的值不是none</li>
<li>posittion的值不是static或者relative</li>
<li>display的值是inline-block、flex、或者inline-flex</li>
<li>overflow：hidden</li>
</ol>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>CSS3选择器</title>
    <url>/article/1f818b1f.html</url>
    <content><![CDATA[<p>作为HTML和CSS的桥梁，CSS3拥有众多的选择器，下面一一列举CSS的选择器</p>
<p>先来看下选择器的思维导图。</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210929215328.png"></p>
<h1 id="CSS2-1选择器"><a href="#CSS2-1选择器" class="headerlink" title="CSS2.1选择器"></a>CSS2.1选择器</h1><h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><p>标签选择器也称着元素选择器，就是选择HTML标签，这个标签不管嵌套多深，选择页面上所有该标签，由于覆盖面广，适合标签的初始化。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="comment">/*去除小圆点 */</span></span><br><span class="line">    <span class="attribute">list-style</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* 去除下划线 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h2><p>ID选择器原则上在页面只能存在一个名称，不能重名，虽然样式不会报错，但是在执行JavaScript脚本时则会报错。</p>
<p>命名规则：字母、数字、下划线、短横构成，<strong>不能数字开头</strong>，区分大小写</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#para1</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><p>class命名规范与ID相同，class可以相同页面多个相同类目，同一个标签可以多个类</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;warning spec&quot;</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.warning</span> &#123;</span></span><br><span class="line"><span class="css">   <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css"> &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.spec</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="css"> &#125;</span></span><br><span class="line"><span class="css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>选择该标签内部后代的选择器，使用<strong>空格隔开</strong>，下面的例子,选择了box类目里面所有类名为spec的标签，不管这标签嵌套多深，都会被选中。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.spec</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h3><p>选择即是什么又是什么的标签，只有两个标签符合了才会被选中。中间<strong>没有空格</strong>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-class">.spec</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>选择所有该标签，<strong>逗号隔开</strong>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><p>伪类是添加到选择器的描述性词语，指定要选择的元素的特殊状态。超级链接就拥有4个特殊的状态。</p>
<table>
<thead>
<tr>
<th align="center">伪类</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">a:link</td>
<td align="center">没有被访问的链接</td>
</tr>
<tr>
<td align="center">a:visited</td>
<td align="center">已经被访问的链接</td>
</tr>
<tr>
<td align="center">a:hover</td>
<td align="center">鼠标悬停的链接</td>
</tr>
<tr>
<td align="center">a:active</td>
<td align="center">正在被激活的链接</td>
</tr>
</tbody></table>
<blockquote>
<p>TIP:a标签的伪类一定要按顺序书写样式，否则伪类失效。</p>
</blockquote>
<h1 id="CSS3选择器"><a href="#CSS3选择器" class="headerlink" title="CSS3选择器"></a>CSS3选择器</h1><h2 id="元素关系选择器"><a href="#元素关系选择器" class="headerlink" title="元素关系选择器"></a>元素关系选择器</h2><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><p>当<strong>使用&gt;符号分隔</strong>两个元素时，它只会匹配那些作为<strong>第一个元素</strong>的直接后代元素，即两个标签为父子关系。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h3><p>相邻兄弟选择器，使用+符号连接两个选择器，有三个特点：同一父元素下的子元素，第一元素和第二元素是紧跟着的，他们是同级别的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> + <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>BOX的P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>BOX的P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>BOX的P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="通用兄弟选择器"><a href="#通用兄弟选择器" class="headerlink" title="通用兄弟选择器"></a>通用兄弟选择器</h3><p>通用选择器使用<del>符号，a</del>b选择a元素<strong>之后</strong>所有<strong>同层级</strong>b元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">     <span class="selector-tag">h3</span> ~ <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>H3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 这两个会选中 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211001100734.png"></p>
<h2 id="序号选择器"><a href="#序号选择器" class="headerlink" title="序号选择器"></a>序号选择器</h2><p>选择该元素后面的第几个元素。</p>
<table>
<thead>
<tr>
<th align="center">举例</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">:first-child</td>
<td align="center">第一个子元素</td>
</tr>
<tr>
<td align="center">:last-child</td>
<td align="center">最后一个子元素</td>
</tr>
<tr>
<td align="center">:nth-child(n)</td>
<td align="center">第n个子元素</td>
</tr>
<tr>
<td align="center">:nth-of-type(n)</td>
<td align="center">第n个某类型子元素</td>
</tr>
<tr>
<td align="center">:nth-last-child</td>
<td align="center">倒数第n个</td>
</tr>
<tr>
<td align="center">:nth-last-of-type(n)</td>
<td align="center">倒数第n个某类型子元素</td>
</tr>
</tbody></table>
<h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><table>
<thead>
<tr>
<th align="center">举例</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">img[alt]</td>
<td align="center">选择有alt属性的img标签</td>
</tr>
<tr>
<td align="center">img[alt=”故宫”]</td>
<td align="center">选择有alt属性是故宫的img标签</td>
</tr>
<tr>
<td align="center">img[alt^=”北京”]</td>
<td align="center">选择有alt属性以北京<strong>开头</strong>的img标签</td>
</tr>
<tr>
<td align="center">img[alt$=”夜景”]</td>
<td align="center">选择有alt属性以夜景<strong>结尾</strong>的img标签</td>
</tr>
<tr>
<td align="center">img[alt*=”美”]</td>
<td align="center">选择有alt属性中<strong>含有</strong>美字样的img标签</td>
</tr>
<tr>
<td align="center">img[alt~=”手机拍摄”]</td>
<td align="center">选择有alt属性中有<strong>空格隔开</strong>的手机拍摄字样的img标签</td>
</tr>
<tr>
<td align="center">img[alt|=”参赛作品”]</td>
<td align="center">选择有alt属性以“参赛作品”<strong>开头</strong>的img标签</td>
</tr>
</tbody></table>
<h2 id="新增伪类选择器"><a href="#新增伪类选择器" class="headerlink" title="新增伪类选择器"></a>新增伪类选择器</h2><p>empty：选择空标签，空格不算空标签 </p>
<p>focus：选择当前获得焦点的表单元素</p>
<p>enabled：选择当前有效的表单元素</p>
<p>disabled：选择当前无效的表单元素</p>
<p>checked：选择当前已经勾选的单选按钮或者复选框</p>
<p>root：选择根元素，html标签</p>
<h2 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h2><ul>
<li><p><code>::before</code>：创建一个伪元素，其将成为匹配选中的元素的第一个子元素，必须设置content属性表示其中的内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&#x27;★&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>::after</code>：创建一个伪元素，其将成为匹配选中的元素的最后一个子元素，必须设置content属性表示其中的内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&#x27;★&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>::selection</code>：文档被用户高亮的部分，使用鼠标圈选部分</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">::selection</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>::first-letter</code>：文档第一行第一个字(必须是块级元素)</p>
</li>
<li><p><code>::first-line</code>：文档第一行字(必须是块级元素)</p>
</li>
</ul>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>CSS3层叠性、继承性、优先级</title>
    <url>/article/96691857.html</url>
    <content><![CDATA[<p>在CSS3中如果同时多个选择器都在描述同一个元素，那么CSS3会把一层一层的样式刷上去，这就是他的层叠性，但是，如果多个选择器都在描述这个元素的同个属性，CSS3会采取权重计算后采用那个样式，如果属性是具有继承性，则优先采用就近原则，当一样近的时候，才选择权重计算。这些计算只能是在同一个引用方式生效，否则，行内式是最高权限，然后才是内嵌，最后是外链。</p>
<h1 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h1><p>首先CSS全称叫CascadingStyleSheets，中文名为层叠性样式表，CSS根据选择器，属性，属性值为HTML标签刷上一层一层样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.spec</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#paragraph</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;spec&quot;</span> <span class="attr">id</span>=<span class="string">&quot;paragraph&quot;</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最终效果：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211001202944.png"></p>
<p>可以看到，每个选择器的样式都是一层一层刷上去的，但是如果每个选择器都在描述同一个属性呢，这需要后面的优先级，权重计算来衡量。</p>
<h1 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h1><p>CSS的优先级可以分为文件的引入方式和选择器的优先级</p>
<p>文件的引入方式，优先级又高到低：</p>
<ul>
<li>行内样式&gt;内嵌式&gt;链接式&gt;@import导入式</li>
</ul>
<p>选择器优先级：</p>
<ul>
<li>ID&gt;Classs&gt;属性选择器&gt;伪类选择器&gt;伪元素选择器&gt;标签选择器&gt;标签&gt;通配选择器</li>
</ul>
<h1 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h1><p>color、font-开头、list-开头、text-开头、line-开头都具有继承性，继承性是祖先元素设置后，后代元素生效</p>
<h1 id="两个属性"><a href="#两个属性" class="headerlink" title="两个属性"></a>两个属性</h1><h2 id="important"><a href="#important" class="headerlink" title="!important"></a>!important</h2><p>!important是提升属性的权重，它影响的是该属性中的权重值，写在属性后面，该属性的权重为最大</p>
<h2 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h2><p>z-index是影响层叠性，需要注意的是两个元素是需要设置定位属性才可以生效！</p>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><ul>
<li>下面p段落的文字是什么颜色？</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">     <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">     <span class="selector-id">#box2</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: yellow&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确答案是：aqua颜色</p>
<p>小结：</p>
<ul>
<li>首先color是继承属性，所以优先采用就近原则</li>
<li>就近原则在于描述的是否接近，而不是书写位置的远近</li>
</ul>
<hr>
<ul>
<li>下面代码中会出现什么颜色？</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-id">#box2</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确答案：aqua</p>
<p>小结：</p>
<ul>
<li>background-color属性没有继承性，优先使用权重</li>
</ul>
<hr>
<ul>
<li>下面p段落的文字是什么颜色？</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">       <span class="selector-id">#box2</span> <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#box4</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span> <span class="attr">id</span>=<span class="string">&quot;box4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确答案：red</p>
<p>小结：</p>
<ul>
<li>color属性具有继承性，所以使用就近原则</li>
<li>两个选择器一样远近，使用权重计算</li>
</ul>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>CSS浮动布局和定位</title>
    <url>/article/29b6ab94.html</url>
    <content><![CDATA[<p>CSS的布局方式有很多种：表格、弹性、浮动等布局，本文章主要写浮动布局。</p>
<h1 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h1><p><strong>基本概念</strong></p>
<p>浮动最本质的功能就是实现并排，虽然使用<code>display: inline-block;</code>也可以实现并排，不过有间隙。</p>
<p><strong>浮动关键字</strong></p>
<p> <code>float: left</code>：左浮动</p>
<p> `float: right;：右浮动</p>
<p><strong>浮动使用要点</strong></p>
<ul>
<li><p>要浮动都浮动</p>
</li>
<li><p>父盒子有足够宽度，否则盒子会往下掉</p>
</li>
</ul>
<p><strong>浮动贴靠顺序</strong></p>
<ul>
<li>当父盒子空间不够时，浮动盒子会寻找前一个兄弟元素贴靠</li>
</ul>
<p><strong>浮动的特点</strong></p>
<ul>
<li>浮动的盒子无法称起父盒子，会造成高度塌陷</li>
<li>设置成浮动的盒子都可以设置宽高</li>
</ul>
<p><strong>浮动形成的布局</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">header</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.logo</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: palegreen;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.denglu</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: blueviolet;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.miaosu</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">701px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: burlywood;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">main</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.conten</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">aside</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">250px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">footer</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;denglu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;miaosu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;conten&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211006210028.png"></p>
<p><strong>清除浮动影响</strong>：</p>
<ul>
<li><p>overflow: hidden（不推荐）</p>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  * &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>不推荐理由：</p>
<ul>
<li>overflow: hidden主要是用来溢出隐藏，虽然可以使盒子遵循BFC规范而不造成浮动的影响，但是需要写一个父盒子，给父盒子设置属性</li>
<li>overflow: hidden可以然清除浮动，但是想让它清除外边距垂直塌陷，这需要在父盒子里面写一个子盒子，然后再写外边距，这样才可以清除外边距垂直塌陷的问题，总的说，这种方法很简单，但是如果不小心使用，问题较多</li>
</ul>
<ul>
<li><code>clear:both</code>（不推荐）</li>
</ul>
<p>给后面的父盒子设置，意为清除左右浮动</p>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    * &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="css">      <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>不推荐理由：</p>
<ul>
<li>margin失效，高度塌陷</li>
</ul>
<ul>
<li>伪元素</li>
</ul>
<p>给父盒子设置伪元素</p>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  * &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box clearfix&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>高度没有塌陷，只是给父盒子设置一个伪元素类</li>
</ul>
<ul>
<li>隔墙</li>
</ul>
<p>就是给div之间设置一个有高度的盒子</p>
<p>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    * &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.test</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><h2 id="相对定位（relative）"><a href="#相对定位（relative）" class="headerlink" title="相对定位（relative）"></a>相对定位（relative）</h2><p>相对自身进行定位，不脱离文档流，适合在微调的场景</p>
<h2 id="绝对定位（absolute）"><a href="#绝对定位（absolute）" class="headerlink" title="绝对定位（absolute）"></a>绝对定位（absolute）</h2><p>相对于前一个定位元素进行定位，如果没有，则相对于body进行定位，脱离文档流，对其他元素不会产生干扰，而是进行压盖</p>
<p><strong>垂直居中</strong>：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123; </span><br><span class="line">   	    <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">margin-top</span>: 负自己高度一半;</span><br><span class="line">        <span class="attribute">margin-left</span>: 负自己宽度一半;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="固定定位（fixed）"><a href="#固定定位（fixed）" class="headerlink" title="固定定位（fixed）"></a>固定定位（fixed）</h2><p>不管页面如何卷动，永远固定在一个位置，相对于视口位置，脱离文档流</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5的十大新特性</title>
    <url>/article/63b2262b.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>HTML5是构建Web内容的一种语言描述方式。HTML5是互联网的下一代标准，是构建以及呈现互联网内容的一种语言方式．被认为是互联网的核心技术之一。HTML产生于1990年，1997年HTML4成为互联网标准，并广泛应用于互联网应用的开发。HTM5是HTML的第五个版本，以下是HTML5新增的十大特性</p>
<h1 id="新增十大特性"><a href="#新增十大特性" class="headerlink" title="新增十大特性"></a>新增十大特性</h1><h2 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h2><p>首先知道，HTML本身实现出来的不在于效果样式，而在于网页本身的语义，HTML5增加了大量语义化标签，虽然效果一样，但是理解起来却十分顺畅。</p>
<table>
<thead>
<tr>
<th align="center">标签</th>
<th align="center">语义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">header</td>
<td align="center">定义了文档的头部区域</td>
</tr>
<tr>
<td align="center">footer</td>
<td align="center">定义了文档的尾部区域</td>
</tr>
<tr>
<td align="center">nav</td>
<td align="center">定义文档的导航</td>
</tr>
<tr>
<td align="center">section</td>
<td align="center">定义文档中的节（文档、区段）</td>
</tr>
<tr>
<td align="center">article</td>
<td align="center">定义页面独立的内容区域(文档核心)</td>
</tr>
<tr>
<td align="center">aside</td>
<td align="center">定义页面的侧边栏内容(非核心，广告)</td>
</tr>
<tr>
<td align="center">detailes</td>
<td align="center">用于描述文档或文档某个部分的细节</td>
</tr>
<tr>
<td align="center">summary</td>
<td align="center">标签包含 details 元素的标题</td>
</tr>
<tr>
<td align="center">dialog</td>
<td align="center">定义对话框，比如提示框</td>
</tr>
<tr>
<td align="center">main</td>
<td align="center">定义网页核心部分</td>
</tr>
</tbody></table>
<h2 id="增强型表单控件"><a href="#增强型表单控件" class="headerlink" title="增强型表单控件"></a>增强型表单控件</h2><p>HTML5增加了许多表单控件可以供我们选择，当然也新增了表单属性。</p>
<p>新增的表单控件：</p>
<table>
<thead>
<tr>
<th align="center">控件</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">color</td>
<td align="center">主要用于选取颜色</td>
</tr>
<tr>
<td align="center">date</td>
<td align="center">日期</td>
</tr>
<tr>
<td align="center">time</td>
<td align="center">时间</td>
</tr>
<tr>
<td align="center">month</td>
<td align="center">月份</td>
</tr>
<tr>
<td align="center">week</td>
<td align="center">周</td>
</tr>
<tr>
<td align="center">number</td>
<td align="center">数值</td>
</tr>
<tr>
<td align="center">email</td>
<td align="center">包含 e-mail 地址的输入域</td>
</tr>
<tr>
<td align="center">file</td>
<td align="center">上传文件</td>
</tr>
<tr>
<td align="center">range</td>
<td align="center">滑块、拖拽条</td>
</tr>
<tr>
<td align="center">search</td>
<td align="center">搜索框</td>
</tr>
<tr>
<td align="center">url</td>
<td align="center">网址</td>
</tr>
</tbody></table>
<p>新增的智能感应：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  请输入您的乘车工具:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">list</span>=<span class="string">&quot;buy&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;buy&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>轿车<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>单车<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>拖拉机<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210929093435.png"></p>
<h2 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h2><p>在HTML5之前实现网页的视频音频需要使用flash，而现在使用video和audio标签就能插入视频和音频。</p>
<p>video 视频：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./assace/a.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span>你的浏览器不支持<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>video标签不支持，将会显示标签内文字</li>
<li>src属性后面是资源文件</li>
<li>controls属性是显示播放控件</li>
<li>autoplay属性是自动播放</li>
<li>loop属性循环播放</li>
<li>video支持的文件格式有mp4、ogv、webm格式</li>
</ul>
<p>audio音频：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./assace/a.mp3&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span>你的浏览器不支持<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>audio标签支持mp3、ogg格式</li>
<li>属性功能与video 相同</li>
</ul>
<h2 id="Canvas绘图"><a href="#Canvas绘图" class="headerlink" title="Canvas绘图"></a>Canvas绘图</h2><p>Canvas标签只是图形容器，必须使用脚本来绘制图形。由于Canvas有很多知识点，这里简单概括，后面有专门的文章</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">&quot;myCanvas&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #c3c3c3&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> c = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;myCanvas&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ctx = c.getContext(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    ctx.fillStyle = <span class="string">&#x27;#FF0000&#x27;</span>;</span></span><br><span class="line"><span class="javascript">    ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">75</span>);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>canvas标签默认是没有任何视觉效果的，先给他创建宽和高，一个边框。</p>
<p>使用JavaScript脚本通过ID获取Dom</p>
<p>getContext(“2d”) 对象是内建的 HTML5 对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p>
<p>fillStyle 属性可以是CSS颜色，渐变，或图案。fillStyle默认设置是#000000（黑色）。</p>
<p>fillRect(x,y,width,height) 方法定义了矩形当前的填充方式。意思是：在画布上绘制 150x75 的矩形，从左上角开始 (0,0)</p>
<h2 id="地理定位"><a href="#地理定位" class="headerlink" title="地理定位"></a>地理定位</h2><p>在HTML5的标准中新增了地理位置这一功能，由JavaScript进行实现，由于国内网络环境，如果使用以下这个例子，大概率是不成功。</p>
<p>而想使用地理信息，就需要用到国内的地图平台，这里设计内容较多，后面文章在详细分析</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     <span class="keyword">if</span> (navigator.geolocation) &#123;</span></span><br><span class="line"><span class="javascript">       navigator.geolocation.getCurrentPosition(onSuccess, onError);</span></span><br><span class="line"><span class="javascript">     &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">       alert(<span class="string">&#x27;您的浏览器不支持使用HTML 5来获取地理位置服务&#x27;</span>);</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">     <span class="comment">//定位数据获取成功响应</span></span></span><br><span class="line"><span class="javascript">     <span class="function"><span class="keyword">function</span> <span class="title">onSuccess</span>(<span class="params">position</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="built_in">document</span>.getElementById(<span class="string">&#x27;app&#x27;</span>).innerHTML =</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;纬度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.latitude +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;经度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.longitude +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;海拔: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.altitude +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;水平精度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.accuracy +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;垂直精度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.altitudeAccura;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">     <span class="comment">//定位数据获取失败响应</span></span></span><br><span class="line"><span class="javascript">     <span class="function"><span class="keyword">function</span> <span class="title">onError</span>(<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">switch</span> (error.code) &#123;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.PERMISSION_DENIED:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;您拒绝对获取地理位置的请求&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.POSITION_UNAVAILABLE:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;位置信息是不可用的&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.TIMEOUT:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;请求您的地理位置超时&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.UNKNOWN_ERROR:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;未知错误&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br></pre></td></tr></table></figure>



<h2 id="拖放式API"><a href="#拖放式API" class="headerlink" title="拖放式API"></a>拖放式API</h2><p>　拖放是一种常见的特性，即抓取对象以后拖到另一个位置。在 HTML5 中，拖放是标准的一部分，任何元素都能够拖放。</p>
<p>　拖放的过程分为源对象和目标对象。源对象是指你即将拖动元素，而目标对象则是指拖动之后要放置的目标位置。</p>
<h2 id="Web-Worker（多线程）"><a href="#Web-Worker（多线程）" class="headerlink" title="Web Worker（多线程）"></a>Web Worker（多线程）</h2><p>web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。你可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。</p>
<h2 id="Web-Storage（数据存储）"><a href="#Web-Storage（数据存储）" class="headerlink" title="Web Storage（数据存储）"></a>Web Storage（数据存储）</h2><p>HTML5新增的数据存储有localstorage和sessionStorage，适合简单数据存储，WebSQL和IndexDB适合一些复杂的数据存储</p>
<h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><p>什么是webSocke？</p>
<ul>
<li>webSocke是网络传输协议，可在单个TCP连接上全双工通讯，位于OSI模型的应用层</li>
</ul>
<ul>
<li>webSocke是长连接的协议，实时的通讯，允许服务端推送消息到客户端，并且这种长连接并不会占用网络资源，这就好比一条流管道一样，不输送东西，当然不会造成资源的 流失。</li>
</ul>
<p>什么是全双功？</p>
<ul>
<li>在用一时刻，c端和S端能同时传输数据</li>
</ul>
<p>webSocke应用场景：</p>
<ul>
<li>大数据可视化，聊天、直播弹幕、游戏等需要实时数据的应用</li>
</ul>
<p>特点：</p>
<ul>
<li>TCP连接，与HTTP协议兼容</li>
<li>双向通信，主动推送</li>
<li>无同源限制，协议标识符是ws（加密wss）</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>HTML5新增许多特性和标准，大多是为适配当今互联网应用 复杂的需求，每个特性背后都有各自的应用场景和知识点。</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title>CSS盒模型</title>
    <url>/article/94a1bb4e.html</url>
    <content><![CDATA[<p>CSS的盒模型分为W3C的标准模型和IE的怪异模型。</p>
<p>W3C的盒模型：</p>
<p>内容宽+左右内边距+左右边框 = 盒子<strong>实际</strong>宽度</p>
<p>内容宽+左右内边距+左右边框+左右外边距= 盒子<strong>占用</strong>宽度</p>
<p>高度同理，也就是设置的宽高就是内容可以使用的宽高，其他设置的值都是外扩的</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/2015-10-03-css-27.jpg"></p>
<p>IE的怪异盒模型：</p>
<p>IE盒模型虽然包含W3C的盒模型，但是它内容宽包含了内边距、边框和外边距，也就是说，设置的宽高不一定就是内容可以使用的宽高，它属于内缩的一种。</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/2015-10-03-css-30.jpg"></p>
<p>当然我们可以通过以下属性灵活切换模型：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-sizing</span>: border-box;  // 设置为IE模型</span><br><span class="line"> 	<span class="attribute">box-sizing</span>: contetn-box; // 设置为标准模型</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>搭建属于自己的UI组件库</title>
    <url>/article/e3dabf31.html</url>
    <content><![CDATA[<p>最近使用主流的UI框架，忽然心血来潮，何不自己搭建属于自己的UI组件库呢，类似Mint-UI、Element-UI、Vant等组件框架，好在大多UI框架都是开源，所以经过学习实践，终于搭建了属于自己UI组件库——LInView。</p>
<p>当然想要跟主流框架一样，当然不能只停留在本地运行，我会发布到NPM上，并使用VuePress形成文档，以方便开发使用。</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文章着重与全流程的开发，不单于仅限于开发一点，真正的从0到1的开发，LinView也不是基于其他UI框架进行二次开发，完全的样式开发。更着文章步骤，你也能实现自己UI组件库。</p>
<p>为何造轮子：造轮子的意义在于理解其原理，并且对于一些UI框架出现的问题能及时定位，能对UI框架进行高度的自定义，使其更加贴合业务开发。</p>
<p>在开发自定义组件库前先来看下思维导图，文章将主要分为六大步骤。</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211002133138.png"></p>
<h1 id="工程化目录"><a href="#工程化目录" class="headerlink" title="工程化目录"></a>工程化目录</h1><p>一个好的工程目录能较好的体现项目的健壮性和可维护性。这里使用Vue/Cli形成目录。</p>
<p>首先电脑需要下载安装好Node，我的Node版本为v14.17.6</p>
<p>下载Vue/CLi：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli-service-global</span><br></pre></td></tr></table></figure>

<p>创建项目：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vue create linview</span><br></pre></td></tr></table></figure>

<p>配置文件直接默认Vue2：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211002153430.png"></p>
<p>修改工程化目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|-- linview</span><br><span class="line">    |-- .gitignore</span><br><span class="line">    |-- babel.config.js</span><br><span class="line">    |-- package-lock.json</span><br><span class="line">    |-- package.json</span><br><span class="line">    |-- README.md</span><br><span class="line">    |-- vue.config.js //Vue配置文件</span><br><span class="line">    |-- components //组件代码</span><br><span class="line">    |   |-- css    //组件样式</span><br><span class="line">    |   |   |-- demo.scss</span><br><span class="line">    |   |-- lib    //组件核心</span><br><span class="line">    |       |-- card</span><br><span class="line">    |       |-- demo</span><br><span class="line">    |           |-- index.js</span><br><span class="line">    |           |-- src</span><br><span class="line">    |               |-- Index.vue</span><br><span class="line">    |-- docs       //文档API</span><br><span class="line">    |-- examples   //业务代码</span><br><span class="line">    |   |-- App.vue</span><br><span class="line">    |   |-- main.js</span><br><span class="line">    |   |-- assets</span><br><span class="line">    |       |-- logo.png</span><br><span class="line">    |-- public</span><br><span class="line">        |-- favicon.ico</span><br><span class="line">        |-- index.html</span><br></pre></td></tr></table></figure>

<p>src被修改后需要配置vue的入口文件，新建vue.config.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">pages</span>: &#123;</span><br><span class="line">    <span class="attr">index</span>: &#123;</span><br><span class="line">      <span class="attr">entry</span>: <span class="string">&#x27;examples/main.js&#x27;</span>,</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;public/index.html&#x27;</span>,</span><br><span class="line">      <span class="attr">filename</span>:<span class="string">&#x27;index.html&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>如果按照先前的步骤，到这里会提示sass-loader没有安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i sass-loader -D</span><br></pre></td></tr></table></figure>

<p>如果按照上面命令，又会出现如下错误：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211002182221.png"></p>
<p>原因是版本过高，我们需要换下版本：</p>
<p>卸载：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall sass-loader -D</span><br></pre></td></tr></table></figure>

<p>安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i sass-loader@5 -D</span><br></pre></td></tr></table></figure>

<p>如果此时运行，可能又会提示如下错误</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211002184021.png"></p>
<p>原因是没有安装node-sass。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i node-sass@4 -D</span><br></pre></td></tr></table></figure>

<p>运行项目，没有报错，至此，工程化目录已经基本完成。</p>
<h1 id="代码样式编写"><a href="#代码样式编写" class="headerlink" title="代码样式编写"></a>代码样式编写</h1><p>在正式组件开发之前，我们应该写一个Demo组件测试一下项目是否能跑起来。</p>
<p><code>linview/components/lib/demo/src/Index.vue</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;l-demo&quot;&gt;</span><br><span class="line">    Demo</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;Demo&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>linview/components/css/demo.scss</code>：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.l-demo</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>linview/examplesma/main.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../components/css/demo.scss&#x27;</span><span class="comment">//引入样式</span></span><br><span class="line"><span class="keyword">import</span> Demo <span class="keyword">from</span> <span class="string">&#x27;../components/lib/demo/src/Index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">Vue.use(Demo)</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>linview/examplesma/App.vue</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;Demo&gt;&lt;/Demo&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>如果按照上面的代码书写会发现，组件不起作用，可以我们在使用第三方UI组件库的时候确实是Use这个组件就可以使用了，我们打开控制台，会发现报以下错误：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211002203418.png"></p>
<p>大概意思是组件没有注册，那么接下来对组件的全局注册：</p>
<p>修改<code>linview/examplesma/main.js</code>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;../components/css/demo.scss&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Demo <span class="keyword">from</span> <span class="string">&#x27;../components/lib/demo/index.js&#x27;</span></span><br><span class="line"><span class="comment">//Vue.component(&#x27;name&#x27;,Demo)</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">Vue.use(Demo)<span class="comment">//Demo.install -&gt; vue.component</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>增加<code>linview/components/lib/demo/index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Demo <span class="keyword">from</span> <span class="string">&#x27;./src/Index.vue&#x27;</span>;</span><br><span class="line">Demo.install = <span class="function"><span class="keyword">function</span> (<span class="params">Vue</span>) </span>&#123;</span><br><span class="line">  Vue.component(Demo.name, Demo)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Demo</span><br></pre></td></tr></table></figure>

<p>运行项目，没有报错，则Demo组件完成。</p>
<p>写到这里会发现，其实就是一个全局的组件，但是在开发过程中，首先要考虑的组件的通用性，再而是组件的可维护，组件库的意义个人觉得是在于便于开发，想想我只要npm install一个包，然后我在main引入，在组件传递几个数值，一个非常好看的页面就形成，何乐而不为呢</p>
<p>接下来编写正式的第一个卡片组件：</p>
<p><code>Index.vue</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;l-card&quot; :style=&quot;width?&#123;width:width+&#x27;px&#x27;&#125;:&#123;&#125;&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;l-card-img&quot; :style=&quot;imgHeight?&#123;height:imgHeight+&#x27;px&#x27;&#125;:&#123;&#125;&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;imgSrc&quot; alt=&quot;img&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div v-if=&quot;summary&quot; class=&quot;l-card-summary&quot;&gt;</span><br><span class="line">      &#123;&#123;summary&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div v-else class=&quot;l-card-summary&quot;&gt;</span><br><span class="line">      &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;Card&#x27;,</span><br><span class="line">    props:&#123;</span><br><span class="line">      //卡片宽度</span><br><span class="line">      width:&#123;</span><br><span class="line">        type:Number,</span><br><span class="line">        default:0</span><br><span class="line">      &#125;,</span><br><span class="line">      //卡片图片资源</span><br><span class="line">      imgSrc:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        default:&#x27;&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      //卡片图片高度</span><br><span class="line">      imgHeight:&#123;</span><br><span class="line">        type:Number,</span><br><span class="line">        default:0</span><br><span class="line">      &#125;,</span><br><span class="line">      //卡片概要</span><br><span class="line">      summary:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        default:&#x27;&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p><code>card.scss</code></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.l-card</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">270px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">6px</span> <span class="number">10px</span> <span class="number">0</span> rgba(<span class="number">95</span>,<span class="number">101</span>,<span class="number">105</span>,<span class="number">0.15</span>);</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">8px</span>;</span><br><span class="line">  &amp;-<span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">152px</span>;</span><br><span class="line">    <span class="selector-tag">img</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;-<span class="selector-tag">summary</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Card <span class="keyword">from</span> <span class="string">&#x27;./src/Index.vue&#x27;</span>;</span><br><span class="line">Card.install = <span class="function"><span class="keyword">function</span> (<span class="params">Vue</span>) </span>&#123;</span><br><span class="line">  Vue.component(Card.name, Card)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Card</span><br></pre></td></tr></table></figure>

<h1 id="组件测试"><a href="#组件测试" class="headerlink" title="组件测试"></a>组件测试</h1><p>编写好的组件需要在本地进行测试才能发布，这里的测试不是非常正规的单元测试，而是直接使用examples目录下的App文件测试框架。</p>
<p><code>App.vue</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;Card imgSrc=&quot;./img/card.png&quot; summary=&quot;Vue.js 源码全方位深入解析 全面深入理解Vue实现原理，掌握源码分析技巧&quot;&gt;&lt;/Card&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;Card imgSrc=&quot;./img/card.png&quot; summary=&quot;Vue.js 源码全方位深入解析 全面深入理解Vue实现原理，掌握源码分析技巧&quot;&gt;</span><br><span class="line">      &lt;template v-slot:footer&gt;</span><br><span class="line">        &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;level&quot;&gt;高级 · 4256人报名 &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;price&quot;&gt;￥488.00&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/Card&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  width: 270px;</span><br><span class="line">&#125;</span><br><span class="line">.footer &#123;</span><br><span class="line">  padding: 0 8px;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  text-align: left;</span><br><span class="line">&#125;</span><br><span class="line">.level &#123;</span><br><span class="line">  color: #9199a1;</span><br><span class="line">  margin-bottom: 8px;</span><br><span class="line">&#125;</span><br><span class="line">.price &#123;</span><br><span class="line">  color: #f01414;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>预览效果：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211002231029.png"></p>
<h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>完成以上的步骤，其实已经可以发布到NPM上，但是有两个问题，</p>
<ul>
<li>现在使用该组件的时候，只能一个一个组件引用，不能全局引入，这需要两个入口文件，一个SCSS，一个JS。</li>
<li>项目没有打包优化，包体积大</li>
</ul>
<p>对于以上问题，我使用WebPack来打包JS，Gulp打包CSS</p>
<p>安装依赖：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i gulp@4 gulp-minify-css gulp-sass@4 webpack-cli@4 -D</span><br></pre></td></tr></table></figure>

<p><code>build/webpack.component.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VueLoaderPlugin&#125; = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">&#x27;glob&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> utlis =<span class="built_in">require</span>(<span class="string">&#x27;./utlis&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> list = &#123;&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">makeList</span> (<span class="params">dirPath, list</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> files = glob.sync(<span class="string">`<span class="subst">$&#123;dirPath&#125;</span>/**/index.js`</span>)</span><br><span class="line">  <span class="comment">//[ &#x27;components/lib/card/index.js&#x27;, &#x27;components/lib/demo/index.js&#x27; ]</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;files&#x27;</span>, files);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> file <span class="keyword">of</span> files) &#123;</span><br><span class="line">    <span class="comment">//component card  component demo</span></span><br><span class="line">    <span class="keyword">const</span> component = file.split(<span class="regexp">/[/.]/</span>)[<span class="number">2</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;component&#x27;</span>, component);</span><br><span class="line">    list[component] = <span class="string">`./<span class="subst">$&#123;file&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(list);</span><br><span class="line">&#125;</span><br><span class="line">makeList(<span class="string">&#x27;components/lib&#x27;</span>,list)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: list,<span class="comment">//入口文件</span></span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;production&#x27;</span>,<span class="comment">//生产模式</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].umd.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: utlis.DIST_PATH,</span><br><span class="line">    <span class="attr">library</span>: <span class="string">&#x27;lview&#x27;</span>,</span><br><span class="line">    <span class="attr">libraryTarget</span>:<span class="string">&#x27;umd&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> VueLoaderPlugin()</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">loader</span>:<span class="string">&#x27;vue-loader&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>build/utlis.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.resolve = <span class="function"><span class="keyword">function</span> <span class="title">resolve</span> (<span class="params">dir</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> path.join(__dirname, <span class="string">&#x27;..&#x27;</span>, dir)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">exports</span>.APP_PATH = <span class="built_in">exports</span>.resolve(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line"><span class="built_in">exports</span>.DIST_PATH = <span class="built_in">exports</span>.resolve(<span class="string">&#x27;dist&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><code>bulid/gulpfile.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> utlis =<span class="built_in">require</span>(<span class="string">&#x27;./utlis&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> sass = <span class="built_in">require</span>(<span class="string">&#x27;gulp-sass&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> minifyCSS = <span class="built_in">require</span>(<span class="string">&#x27;gulp-minify-css&#x27;</span>)</span><br><span class="line">gulp.task(<span class="string">&#x27;sass&#x27;</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">&#x27;../components/css/**/*.scss&#x27;</span>)</span><br><span class="line">    .pipe(sass())</span><br><span class="line">    .pipe(minifyCSS())</span><br><span class="line">  .pipe(gulp.dest(utlis.DIST_PATH+<span class="string">&#x27;/css&#x27;</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><code>Script</code>：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;build&quot;</span>: <span class="string">&quot;npm run build:js &amp;&amp; npm run build:css&quot;</span>,</span><br><span class="line"><span class="string">&quot;build:js&quot;</span>: <span class="string">&quot;webpack --config ./build/webpack.component.js&quot;</span>,</span><br><span class="line"><span class="string">&quot;build:css&quot;</span>: <span class="string">&quot;npx gulp sass --gulpfile build/gulpfile.js&quot;</span>,</span><br></pre></td></tr></table></figure>

<p>打包完成后会在项目根目录形成dist文件夹，这是等会我们要NPM上传的。</p>
<h1 id="NPM发布"><a href="#NPM发布" class="headerlink" title="NPM发布"></a>NPM发布</h1><p>本地编写测试好的组件就要发布到NPM上，方便别人的下载使用，在使用之前，需要个人先注册好NPM账号。</p>
<ul>
<li>首先需要配置package.json文件：</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;name&quot;</span>: <span class="string">&quot;linview&quot;</span>,</span><br><span class="line"><span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.1.2&quot;</span>,</span><br><span class="line"><span class="string">&quot;description&quot;</span>: <span class="string">&quot;个人开发者UI组件库&quot;</span>,</span><br><span class="line"><span class="string">&quot;main&quot;</span>: <span class="string">&quot;dist/index.umd.js&quot;</span>,</span><br><span class="line"><span class="string">&quot;keywords&quot;</span>: [</span><br><span class="line">  <span class="string">&quot;linview&quot;</span>,</span><br><span class="line">  <span class="string">&quot;UI&quot;</span>,</span><br><span class="line">  <span class="string">&quot;vue&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="string">&quot;author&quot;</span>: <span class="string">&quot;bamboo_lsf&quot;</span>,</span><br><span class="line"><span class="string">&quot;files&quot;</span>: [</span><br><span class="line">  <span class="string">&quot;dist&quot;</span>,</span><br><span class="line">  <span class="string">&quot;components&quot;</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<p>name：包的名字</p>
<p>version：版本，低版本不能覆盖高版本</p>
<p>description：描述，在你搜索这个包的时候会出现的描述</p>
<p>main：入口主文件，当别人引用包的名字时候，其实就是用的这个文件</p>
<p>keywords：搜索的关键词</p>
<p>author：作者</p>
<p>files：要上传的文件</p>
<ul>
<li><p>书写好根目录的RedeMe文件，它是npm包上的RedeMe文件。</p>
</li>
<li><p>把本地的下载源切换会官方，否则无法登录。</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry http://www.npmjs.org</span><br></pre></td></tr></table></figure>

<p>window上如果登录失败可以在要登录的窗口上在次执行，因为我在切回官方源后，登录报错。</p>
<p>登录命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure>

<p>正常情况输入用户名，密码，邮箱即可登录完成。</p>
<p>接下来使用<code>npm publish</code>上传，随后我们就可以在Npm看到自己发布的包了</p>
<h1 id="文档站点"><a href="#文档站点" class="headerlink" title="文档站点"></a>文档站点</h1><p>一个好的UI框架，当然是需要一个文档展示，这样才方便以后的开发与维护。接下来使用VuePress来形成文档的站点。</p>
<p>首先我们需要明白一个概念，文档和项目代码是在一起的，那么我们应该把文档的静态文件和仓库代码放一起，怎么做到呢，其实，我们只需要把文档形成的静态文件和项目代码放在仓库的不同分支即可。这样两者就不会冲突</p>
<p>安装VuePress：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i VuePress -D</span><br></pre></td></tr></table></figure>

<p>生成以下文件和文件夹：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211003183852.png"></p>
<p>config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;LinView&#x27;</span>,</span><br><span class="line">  <span class="attr">base</span>:<span class="string">&#x27;/linview/&#x27;</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;Just playing around&#x27;</span>,</span><br><span class="line">  <span class="attr">themeConfig</span>: &#123;</span><br><span class="line">    <span class="comment">//导航</span></span><br><span class="line">    <span class="attr">nav</span>: [</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;指南&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;/componentDocs/&#x27;</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">text</span>:<span class="string">&#x27;更新日志&#x27;</span>,<span class="attr">link</span>:<span class="string">&#x27;/update/index&#x27;</span>&#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;GitHub&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;https://github.com/LSFCXZ/linview&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">&#x27;NPM&#x27;</span>, <span class="attr">link</span>: <span class="string">&#x27;https://www.npmjs.com/package/linview&#x27;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">sidebar</span>: &#123;</span><br><span class="line">     <span class="string">&#x27;/componentDocs/&#x27;</span>: [</span><br><span class="line">         &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;简介&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/componentDocs/&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;快速开始&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/componentDocs/start&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;卡片&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/componentDocs/card&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：base是你仓库的名字，如果你的站点没有后缀，那么可以不填</p>
<p>根目录index.md</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">home: true</span><br><span class="line">heroImage: </span><br><span class="line">heroText: LinView</span><br><span class="line">tagline: 简洁、美观、开源的UI框架</span><br><span class="line">actionText: 快速上手 →</span><br><span class="line">actionLink: /componentDocs/start</span><br><span class="line">features:</span><br><span class="line">- title: 简洁至上</span><br><span class="line">  details: 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。</span><br><span class="line">- title: 美观</span><br><span class="line">  details: 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。</span><br><span class="line">- title: 开源免费</span><br><span class="line">  details: VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。</span><br><span class="line">footer: MIT Licensed | Copyright © 2021-present BambooLSF</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>具体可以参考vuepress的官网配置：<a href="https://vuepress.vuejs.org/zh/">https://vuepress.vuejs.org/zh/</a></p>
<p>接下来就是配置脚本：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;docs:dev&quot;</span>: <span class="string">&quot;vuepress dev docs&quot;</span>,</span><br><span class="line"><span class="string">&quot;docs:build&quot;</span>: <span class="string">&quot;vuepress build docs&quot;</span>,</span><br><span class="line"><span class="string">&quot;depoly&quot;</span>: <span class="string">&quot;bash ./build/deploy.sh&quot;</span></span><br></pre></td></tr></table></figure>

<p>docs:dev：运行vuepress</p>
<p>docs:build：打包</p>
<p>depoly：部署</p>
<p>接下来就是部署到githubpage：</p>
<p>build/deploy.sh</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保脚本抛出遇到的错误</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">npm run docs:build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入生成的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> docs/.vuepress/dist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是发布到自定义域名</span></span><br><span class="line"><span class="comment"># echo &#x27;www.example.com&#x27; &gt; CNAME</span></span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&#x27;deploy&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发布到 https://&lt;USERNAME&gt;.github.io</span></span><br><span class="line"><span class="comment"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span><br><span class="line"> git push -f git@github.com:LSFCXZ/linview.git master:gh-pages</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure>

<p>注意： git push是要换成你的github地址 </p>
<p>执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm run depoly</span><br></pre></td></tr></table></figure>

<p>如果在window上无法执行，那么使用git命令窗口即可，这样站点已经完成。</p>
<p>再把我们的项目代码上传：git init ,git add . ,git commit -m ‘’’第一次提交’ ，git push等一把梭上传代码</p>
<p>至此，UI框架基本完成，可以新建项目，npm install 自己的UI库进行测试。</p>
<h1 id="版本问题"><a href="#版本问题" class="headerlink" title="版本问题"></a>版本问题</h1><p>为了避免因为版本问题引起的错误，这里列举开发时版本环境：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;core-js&quot;</span>: <span class="string">&quot;^3.6.5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vue&quot;</span>: <span class="string">&quot;^2.6.11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-babel&quot;</span>: <span class="string">&quot;~4.5.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-eslint&quot;</span>: <span class="string">&quot;~4.5.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@vue/cli-service&quot;</span>: <span class="string">&quot;~4.5.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;babel-eslint&quot;</span>: <span class="string">&quot;^10.1.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span>: <span class="string">&quot;^6.7.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;eslint-plugin-vue&quot;</span>: <span class="string">&quot;^6.2.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gulp&quot;</span>: <span class="string">&quot;^4.0.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gulp-minify-css&quot;</span>: <span class="string">&quot;^1.2.4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;gulp-sass&quot;</span>: <span class="string">&quot;^4.1.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;node-sass&quot;</span>: <span class="string">&quot;^4.14.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;sass-loader&quot;</span>: <span class="string">&quot;^5.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vue-loader&quot;</span>: <span class="string">&quot;^15.9.8&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vue-template-compiler&quot;</span>: <span class="string">&quot;^2.6.11&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vuepress&quot;</span>: <span class="string">&quot;^1.8.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span>: <span class="string">&quot;^4.8.0&quot;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>经过已上步骤，基本已经形成一个较为完整的UI框架，接下来就是不断优化更新框架和文档</p>
<p>LinView是我个人开发的开源UI框架，目前是处于探索尝试阶段，如果你觉得这篇文章对你有帮助，有一定的启发，欢迎给我的仓库点个star。</p>
<p>Github开源地址：<a href="https://github.com/LSFCXZ/linview">https://github.com/LSFCXZ/linview</a></p>
<p>官方文档站点：<a href="https://lsfcxz.github.io/linview/">https://lsfcxz.github.io/linview/</a></p>
<p>个人博客：<a href="https://lsfcxz.gitee.io/">https://lsfcxz.gitee.io/</a></p>
]]></content>
      <categories>
        <category>组件库</category>
      </categories>
      <tags>
        <tag>自定义组件库</tag>
      </tags>
  </entry>
  <entry>
    <title>常用文本样式属性</title>
    <url>/article/90e0fc7e.html</url>
    <content><![CDATA[<p>CSS3提供了大量的文本字体样式属性，本文章介绍CSS常用文本样式属性，以下属性都具有继承性</p>
<h1 id="color属性"><a href="#color属性" class="headerlink" title="color属性"></a>color属性</h1><ul>
<li>Color属性可以设置文本的前景色</li>
<li>属性值主要有英文、十六进制、rgb()、rgba()等表示法</li>
<li>具有继承性</li>
</ul>
<p>十六进制表示法：</p>
<p>#ff0000：三颜色，红绿蓝，ff是十进制的255，每种颜色都是0~255之间</p>
<p>rgb()表示法：</p>
<p>rgb(255,0,0)：三颜色，红绿蓝，ff是十进制的255，每种颜色都是0~255之间</p>
<p>rgba()表示法：(IE9兼容)</p>
<p>rgb(255,0,0, .65)：三颜色，红绿蓝，ff是十进制的255，每种颜色都是0<del>255之间，最后一位表示透明度，0</del>1之间</p>
<h1 id="font-size属性"><a href="#font-size属性" class="headerlink" title="font-size属性"></a>font-size属性</h1><p>font-size属性用来设置字号，单位有px、em、rem，浏览器一般最小是10px</p>
<h1 id="font-weight属性"><a href="#font-weight属性" class="headerlink" title="font-weight属性"></a>font-weight属性</h1><p>font-weight属性用来设置粗细</p>
<table>
<thead>
<tr>
<th align="center">属性值</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">normal</td>
<td align="center">正常属性，400等值</td>
</tr>
<tr>
<td align="center">bold</td>
<td align="center">加粗</td>
</tr>
<tr>
<td align="center">lighter</td>
<td align="center">更细（多数中文字体不支持）</td>
</tr>
<tr>
<td align="center">bolder</td>
<td align="center">更粗（多数中文字体不支持）</td>
</tr>
</tbody></table>
<h1 id="font-style属性"><a href="#font-style属性" class="headerlink" title="font-style属性"></a>font-style属性</h1><table>
<thead>
<tr>
<th align="center">属性值</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">normal</td>
<td align="center">取消倾斜</td>
</tr>
<tr>
<td align="center">italic</td>
<td align="center">倾斜字体</td>
</tr>
<tr>
<td align="center">oblique</td>
<td align="center">倾斜字体(不常用)</td>
</tr>
</tbody></table>
<h1 id="font-decoration属性"><a href="#font-decoration属性" class="headerlink" title="font-decoration属性"></a>font-decoration属性</h1><table>
<thead>
<tr>
<th align="center">属性值</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">none</td>
<td align="center">没有修饰线</td>
</tr>
<tr>
<td align="center">underline</td>
<td align="center">下划线</td>
</tr>
<tr>
<td align="center">line-through</td>
<td align="center">删除线</td>
</tr>
</tbody></table>
<h1 id="font-family属性"><a href="#font-family属性" class="headerlink" title="font-family属性"></a>font-family属性</h1><p>示例：font-family:”微软雅黑”,serif,”Times New Roman”</p>
<ul>
<li>多个字体用逗号隔开，</li>
<li>按顺序，第一个为首选字体，如果系统中没有该字体，则选择后面字体，以此类推</li>
<li>中文和含有空格的英文字体需要引号包裹</li>
<li>通常必须是用户计算机安装的字体</li>
</ul>
<p>自定义字体：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;webfont&#x27;</span>;</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/webfont_8pxgkjvoelj.eot&#x27;</span>); <span class="comment">/* IE9*/</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/webfont_8pxgkjvoelj.eot?#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>), /* IE6-IE8 */</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/webfont_8pxgkjvoelj.woff2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/webfont_8pxgkjvoelj.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>), /* chrome、firefox */</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/webfont_8pxgkjvoelj.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>), /* chrome、firefox、opera、Safari, Android, iOS <span class="number">4.2</span>+*/</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">&#x27;//at.alicdn.com/t/webfont_8pxgkjvoelj.svg#思源黑体-极细&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>); <span class="comment">/* iOS 4.1- */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="text-indent属性"><a href="#text-indent属性" class="headerlink" title="text-indent属性"></a>text-indent属性</h1><p>首行缩进，单位em，表示字符宽度。</p>
<h1 id="text-align属性"><a href="#text-align属性" class="headerlink" title="text-align属性"></a>text-align属性</h1><table>
<thead>
<tr>
<th align="center">属性值</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">center</td>
<td align="center">居中</td>
</tr>
<tr>
<td align="center">right</td>
<td align="center">居右</td>
</tr>
<tr>
<td align="center">left</td>
<td align="center">居左</td>
</tr>
</tbody></table>
<h1 id="line-height属性"><a href="#line-height属性" class="headerlink" title="line-height属性"></a>line-height属性</h1><p>定义行高，行高等于盒子高实现垂直居中效果，单位可以是px，也可以是倍数，百分数</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>WeX-UI组件库搭建</title>
    <url>/article/c7f47550.html</url>
    <content><![CDATA[<p>前段时间写了LinView组件库，但是问题太多，按需引入总是出错，最后只能重写，因为重写，具体的不一一例举，重点把遇到的坑点和心得记录下</p>
<h1 id="工程化目录"><a href="#工程化目录" class="headerlink" title="工程化目录"></a>工程化目录</h1><p>首先依然使用vue/cli形成目录，这是最后的目录结构：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">|-- WeX-UI</span><br><span class="line">    |-- .gitignore</span><br><span class="line">    |-- babel.config.js</span><br><span class="line">    |-- components.json</span><br><span class="line">    |-- deploy.sh         <span class="comment">//vuepress部署</span></span><br><span class="line">    |-- package-lock.json</span><br><span class="line">    |-- package.json</span><br><span class="line">    |-- README.md</span><br><span class="line">    |-- build          <span class="comment">//打包配置文件</span></span><br><span class="line">    |   |-- utlis.js</span><br><span class="line">    |   |-- webpack.base.js</span><br><span class="line">    |   |-- webpack.component.js</span><br><span class="line">    |   |-- webpack.prod.js</span><br><span class="line">    |-- docs           <span class="comment">//vuepress文档</span></span><br><span class="line">    |   |-- index.md</span><br><span class="line">    |   |-- .vuepress</span><br><span class="line">    |   |   |-- config.js</span><br><span class="line">    |   |   |-- enhanceApp.js</span><br><span class="line">    |   |   |-- public</span><br><span class="line">    |   |       |-- card.png</span><br><span class="line">    |   |-- componentdocs</span><br><span class="line">    |   |   |-- card.md</span><br><span class="line">    |   |   |-- index.md</span><br><span class="line">    |   |   |-- start.md</span><br><span class="line">    |   |-- update</span><br><span class="line">    |       |-- index.md</span><br><span class="line">    |-- lib            <span class="comment">//打包后的组件和样式</span></span><br><span class="line">    |   |-- card.js</span><br><span class="line">    |   |-- demo.js</span><br><span class="line">    |   |-- wex-ui.min.js</span><br><span class="line">    |   |-- styles</span><br><span class="line">    |       |-- card.css</span><br><span class="line">    |       |-- demo.css</span><br><span class="line">    |       |-- index.css</span><br><span class="line">    |-- packages         <span class="comment">//原生代码</span></span><br><span class="line">    |   |-- card</span><br><span class="line">    |   |   |-- index.js</span><br><span class="line">    |   |   |-- src</span><br><span class="line">    |   |       |-- Index.vue</span><br><span class="line">    |   |-- demo</span><br><span class="line">    |   |   |-- index.js</span><br><span class="line">    |   |   |-- src</span><br><span class="line">    |   |       |-- Index.vue</span><br><span class="line">    |   |-- theme-chalk         <span class="comment">//样式文件</span></span><br><span class="line">    |       |-- gulpfile.js</span><br><span class="line">    |       |-- src</span><br><span class="line">    |           |-- card.scss</span><br><span class="line">    |           |-- demo.scss</span><br><span class="line">    |           |-- index.scss</span><br><span class="line">    |-- public</span><br><span class="line">    |   |-- favicon.ico</span><br><span class="line">    |   |-- index.html</span><br><span class="line">    |-- src</span><br><span class="line">        |-- App.vue</span><br><span class="line">        |-- index.js        <span class="comment">//全局注册组件</span></span><br><span class="line">        |-- main.js</span><br><span class="line">        |-- assets</span><br><span class="line">        |   |-- logo.png</span><br><span class="line">        |-- components</span><br></pre></td></tr></table></figure>

<ul>
<li>整个目录结构是参考了ElementUI的写法，做了减法</li>
<li>为了第三方项目的按需加载，打包后的都放在lib文件夹</li>
<li>把gulp打包文件放在CSS的包这是参考了ElementUI，感觉上更加舒服，不会在build文件夹还存放另外的打包工具文件</li>
<li>components.json也是参考ElementUI，这是为了按需引入单独打包加上</li>
<li>webpack分成3个，一个基础的，一个打包全部组件，一个用来单独组件打包，虽然现在一个也可以足够打包，但是为了后续的扩展，目前采取该方式</li>
<li>enhanceAppjs文件是用来导入全部组件的，属于应用级别，以前写法是把组件复制过来，麻烦且浪费空间，应用该文件后，开发后的组件就可以书写文档。</li>
<li>deploy.sh拉取到最外层，让config非常纯粹 ，（utils只是为解决路径问题）</li>
</ul>
<h1 id="webpack打包"><a href="#webpack打包" class="headerlink" title="webpack打包"></a>webpack打包</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// webpack.component.js 按需加载，单独组件打包</span></span><br><span class="line"><span class="keyword">const</span> &#123;VueLoaderPlugin&#125;  = <span class="built_in">require</span>(<span class="string">&#x27;vue-loader&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> components = <span class="built_in">require</span>(<span class="string">&#x27;../components.json&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> utlis = <span class="built_in">require</span>(<span class="string">&#x27;./utlis&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> list = &#123;&#125; <span class="comment">//入口文件</span></span><br><span class="line"><span class="keyword">const</span> basePath = path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>)</span><br><span class="line"><span class="built_in">Object</span>.keys(components).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">  list[key] = path.join(basePath,  components[key])</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// console.log(list);</span></span><br><span class="line"><span class="keyword">const</span> webpackconfig = &#123;</span><br><span class="line">  <span class="attr">entry</span>: list,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span>,<span class="comment">//生产模式</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: utlis.DIST_PATH,</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].js&#x27;</span>,</span><br><span class="line">    <span class="attr">library</span>: <span class="string">&#x27;wex-ui&#x27;</span>, <span class="comment">//包名称</span></span><br><span class="line">    <span class="attr">libraryTarget</span>: <span class="string">&#x27;umd&#x27;</span>, <span class="comment">//支持的引入模式</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;<span class="comment">//告诉webpack，什么文件使用什么rules</span></span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;vue-loader&#x27;</span>,</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">     <span class="keyword">new</span> VueLoaderPlugin()</span><br><span class="line">  ]</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = webpackconfig</span><br></pre></td></tr></table></figure>

<ul>
<li>整个打包文件最为精简，后续可能需要优化，减少包的体积</li>
</ul>
<h1 id="NPM上传"><a href="#NPM上传" class="headerlink" title="NPM上传"></a>NPM上传</h1><p>这是最没技术含量的问题，却是困惑我许久的问题：</p>
<ul>
<li>NPM莫名上传失败</li>
</ul>
<p>今天依旧想上传npm包，却发现：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211008210126.png"></p>
<p>这个问题网上找了很久，几乎全网没有答案，尝试了切版本，换源都没有用，最后尝试把http换成https，成功。</p>
<ul>
<li>NPM换源问题</li>
</ul>
<p>在上面问题没有解决的同时，我有进入另外别人设置好的的坑，没错就是下面的博文，</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211008210738.png"></p>
<p>没错，这个源是错误的，正确的是：npm config set registry <a href="https://registry.npmjs.org/">https://registry.npmjs.org</a></p>
<p>但是因为当时急于解决第一个问题，导致了失误。</p>
<p>目前已经举报。。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>目前重写后可以正常使用，按需加载正常，后续包的优化，组件的增加有待研究</p>
]]></content>
      <categories>
        <category>组件库</category>
      </categories>
      <tags>
        <tag>自定义组件库</tag>
      </tags>
  </entry>
  <entry>
    <title>文章锚点失效问题</title>
    <url>/article/26e0b522.html</url>
    <content><![CDATA[<p>在测试博客中发现文章锚点失效问题，特此记录以下</p>
<p>在 <code>Hexo</code> 更新至 5.x 版本，Next 更新至 7.x 版本后，会出现文章的中文目录点击跳转失效的 bug，本博客正式遇到此问题。</p>
<p>在控制台打印如下错误：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">utils.js:<span class="number">240</span> Uncaught <span class="built_in">TypeError</span>: Cannot read properties <span class="keyword">of</span> <span class="literal">null</span> (reading <span class="string">&#x27;getBoundingClientRect&#x27;</span>)</span><br><span class="line">    at HTMLAnchorElement.&lt;anonymous&gt; (utils.js:<span class="number">240</span>)</span><br></pre></td></tr></table></figure>

<p>翻看官方Issues得到解决方案：</p>
<p>链接：<a href="https://github.com/theme-next/hexo-theme-next/pull/1540/files">https://github.com/theme-next/hexo-theme-next/pull/1540/files</a></p>
<p>删除两行代码，增加两行代码：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210927205653.png"></p>
]]></content>
      <categories>
        <category>Hexo框架</category>
      </categories>
      <tags>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>小破站正式上线</title>
    <url>/article/36e749dc.html</url>
    <content><![CDATA[<p>断断续续半年时间，使用<code>Hexo</code>已有很长一段时间，经历了不断的优化踩坑，最开始使用<code>NexT</code>做为博客主题，到后来使用了Butterfly主题，到对主题的一系列魔改，最终还是回归到<code>NexT</code>作为博客的主题。</p>
<p><code>NexT</code>主题相对来说较为简洁，使用Butterfly主题确实对博客有很大的美化程度，但不简约，最主要是在浏览器渲染上面，由于集成大量插件和动画特效，使得浏览时不是特别顺畅。</p>
<p>最终本博客去繁化简，只留下实用功能，对博客轻美化，让网站即顺畅又优美。</p>
<p>目前使用<code>GithubPages</code>加<code>GiteePages</code>双代码平台推送，测试下来，电信网络访问<code>githubPages</code>很大概率屏蔽，<code>GiteePages</code>需要手动更新，较为麻烦，<code>CDN</code>加速效果不明显，CI平台需要收取一定费用，介于目前情况，只能暂时如此，未来计划使用服务器搭建自己的CI平台进行自动化部署</p>
]]></content>
      <categories>
        <category>Hexo框架</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo图床的解决方案</title>
    <url>/article/4c6068df.html</url>
    <content><![CDATA[<p>引子：网站链接嵌套得越深，越不利于SEO优化，Hexo默认链接是年月日标题，如果标题是中文，那么链接就会变成乱码，这很不利于搜索引擎的搜索，为了达到目的，我们会使用<code>hexo-abbrlink</code>插件来解决问题，但是我们需要上传图片，图片要么需要图床，不然你就只能附带博客里面，以下分析个人在遇到这个问题的取舍与想法，愿与诸君分享。</p>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><ul>
<li>我们需要利于SEO的网址</li>
<li>我们需要一个安全、稳定、足够、免费的图床</li>
<li>简单、最好一劳永逸</li>
</ul>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>我们知道，为了达到Hexo的链接优化，需要用到<code>hexo-abbrlink</code>这个插件，使用上传图片使用<code>hexo-asset-image</code>插件，这两个插件单独使用没有问题，但是一起使用就会出现问题，前者把路径改了，后者当然无法找到图片，网上也是一堆长篇大论，这里不在累赘，难道没有一劳永逸吗？</p>
<p>既然两者一起使用会出现问题，（<code>hexo-asset-image</code>插件作者曾提到这是hexo的编译原理，具体可以看官方的lssues）,那么就不一起使用，此路不通，另寻它路。其实最简单的方式就是使用图床功能，把一张图片放到别人的服务器，通过URL就能看到图片，简单快捷，</p>
<p>但是有几个问题：</p>
<ul>
<li><p>图片放在别人的服务器，不太安全</p>
</li>
<li><p>图床一般都需要收费，不可能给你白嫖</p>
</li>
<li><p>图床弄起来较为麻烦</p>
</li>
</ul>
<p>综合以上，其实我们可以利用Gitee来作为我们的图床，有以下几个原因</p>
<ul>
<li>使用<code>hexo-asset-image</code>插件图片本身也是存放在<code>gitee</code>，那么我们这样其实是一样的，只不过不用<code>hexo-asset-image</code>插件</li>
<li><code>Gitee</code>属于国内，速度更快</li>
<li>个人免费有5G的空间，如果只是博客，这个空间还是够的</li>
</ul>
<h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>既然使用Gitee来作为图床，当然不能重复提交代码仓库来实现，这里使用picGo工具，</p>
<p>官网：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>安装好的界面</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210926225740.png"></p>
<p>安装插件：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210926230424.png"></p>
<p>填写信息：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210926231011.png"></p>
<ul>
<li>用户名是注册时候的链接名，不是昵称！！</li>
<li>仓库名小写，直接写就行，不需要写路径</li>
<li>存放路径随意</li>
<li>令牌是<code>Gitee</code>私人令牌，不要给太多权限，第一个就行</li>
<li>图片只能1M上限，大于访问不了，需要登陆才可以有权限访问，这点可以自己测试</li>
</ul>
<h1 id="小工具"><a href="#小工具" class="headerlink" title="小工具"></a>小工具</h1><p>分享一个截图工具：snipaste，可以在win10商店里面下载即可。</p>
<p>官网：<a href="https://zh.snipaste.com/">https://zh.snipaste.com/</a></p>
<p>结合PicGo可以完美配合，复制粘贴上传，不用保存，截图大小也不是很大</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这个办法其实是脱离插件的使用，即满足了URL的优化，又能得到一个图床应用，体验下来还是很方便的，唯一缺点就是流程可能稍加繁琐，不过使用过程非常方便！还是值得推荐的！</p>
]]></content>
      <categories>
        <category>Hexo框架</category>
      </categories>
  </entry>
  <entry>
    <title>无题</title>
    <url>/article/9b44950b.html</url>
    <content><![CDATA[<p>欢乐和苦恼必然联系在一起：</p>
<p>每一个欢乐背后都隐藏着当这个欢乐失去后的苦恼，每一个苦恼背后都隐藏着，当这个苦恼失去后的快乐。</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210927235346.png"></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
