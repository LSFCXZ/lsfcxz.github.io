<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS3层叠性、继承性、优先级</title>
    <url>/article/96691857.html</url>
    <content><![CDATA[<p>在CSS3中如果同时多个选择器都在描述同一个元素，那么CSS3会把一层一层的样式刷上去，这就是他的层叠性，但是，如果多个选择器都在描述这个元素的同个属性，CSS3会采取权重计算后采用那个样式，如果属性是具有继承性，则优先采用就近原则，当一样近的时候，才选择权重计算。这些计算只能是在同一个引用方式生效，否则，行内式是最高权限，然后才是内嵌，最后是外链。</p>
<h1 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h1><p>首先CSS全称叫CascadingStyleSheets，中文名为层叠性样式表，CSS根据选择器，属性，属性值为HTML标签刷上一层一层样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.spec</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#paragraph</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">font-size</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;spec&quot;</span> <span class="attr">id</span>=<span class="string">&quot;paragraph&quot;</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最终效果：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211001202944.png"></p>
<p>可以看到，每个选择器的样式都是一层一层刷上去的，但是如果每个选择器都在描述同一个属性呢，这需要后面的优先级，权重计算来衡量。</p>
<h1 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h1><p>CSS的优先级可以分为文件的引入方式和选择器的优先级</p>
<p>文件的引入方式，优先级又高到低：</p>
<ul>
<li>行内样式&gt;内嵌式&gt;链接式&gt;@import导入式</li>
</ul>
<p>选择器优先级：</p>
<ul>
<li>ID&gt;Classs&gt;属性选择器&gt;伪类选择器&gt;伪元素选择器&gt;标签选择器&gt;标签&gt;通配选择器</li>
</ul>
<h1 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h1><p>color、font-开头、list-开头、text-开头、line-开头都具有继承性，继承性是祖先元素设置后，后代元素生效</p>
<h1 id="两个属性"><a href="#两个属性" class="headerlink" title="两个属性"></a>两个属性</h1><h2 id="important"><a href="#important" class="headerlink" title="!important"></a>!important</h2><p>!important是提升属性的权重，它影响的是该属性中的权重值，写在属性后面，该属性的权重为最大</p>
<h2 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h2><p>z-index是影响层叠性，需要注意的是两个元素是需要设置定位属性才可以生效！</p>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><ul>
<li>下面p段落的文字是什么颜色？</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">     <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">     <span class="selector-id">#box2</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: yellow&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确答案是：aqua颜色</p>
<p>小结：</p>
<ul>
<li>首先color是继承属性，所以优先采用就近原则</li>
<li>就近原则在于描述的是否接近，而不是书写位置的远近</li>
</ul>
<hr>
<ul>
<li>下面代码中会出现什么颜色？</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-id">#box2</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="css">  &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确答案：aqua</p>
<p>小结：</p>
<ul>
<li>background-color属性没有继承性，优先使用权重</li>
</ul>
<hr>
<ul>
<li>下面p段落的文字是什么颜色？</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">       <span class="selector-id">#box2</span> <span class="selector-class">.box3</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#box4</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span> <span class="attr">id</span>=<span class="string">&quot;box4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>正确答案：red</p>
<p>小结：</p>
<ul>
<li>color属性具有继承性，所以使用就近原则</li>
<li>两个选择器一样远近，使用权重计算</li>
</ul>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>HTML5的十大新特性</title>
    <url>/article/63b2262b.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>HTML5是构建Web内容的一种语言描述方式。HTML5是互联网的下一代标准，是构建以及呈现互联网内容的一种语言方式．被认为是互联网的核心技术之一。HTML产生于1990年，1997年HTML4成为互联网标准，并广泛应用于互联网应用的开发。HTM5是HTML的第五个版本，以下是HTML5新增的十大特性</p>
<h1 id="新增十大特性"><a href="#新增十大特性" class="headerlink" title="新增十大特性"></a>新增十大特性</h1><h2 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h2><p>首先知道，HTML本身实现出来的不在于效果样式，而在于网页本身的语义，HTML5增加了大量语义化标签，虽然效果一样，但是理解起来却十分顺畅。</p>
<table>
<thead>
<tr>
<th align="center">标签</th>
<th align="center">语义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">header</td>
<td align="center">定义了文档的头部区域</td>
</tr>
<tr>
<td align="center">footer</td>
<td align="center">定义了文档的尾部区域</td>
</tr>
<tr>
<td align="center">nav</td>
<td align="center">定义文档的导航</td>
</tr>
<tr>
<td align="center">section</td>
<td align="center">定义文档中的节（文档、区段）</td>
</tr>
<tr>
<td align="center">article</td>
<td align="center">定义页面独立的内容区域(文档核心)</td>
</tr>
<tr>
<td align="center">aside</td>
<td align="center">定义页面的侧边栏内容(非核心，广告)</td>
</tr>
<tr>
<td align="center">detailes</td>
<td align="center">用于描述文档或文档某个部分的细节</td>
</tr>
<tr>
<td align="center">summary</td>
<td align="center">标签包含 details 元素的标题</td>
</tr>
<tr>
<td align="center">dialog</td>
<td align="center">定义对话框，比如提示框</td>
</tr>
<tr>
<td align="center">main</td>
<td align="center">定义网页核心部分</td>
</tr>
</tbody></table>
<h2 id="增强型表单控件"><a href="#增强型表单控件" class="headerlink" title="增强型表单控件"></a>增强型表单控件</h2><p>HTML5增加了许多表单控件可以供我们选择，当然也新增了表单属性。</p>
<p>新增的表单控件：</p>
<table>
<thead>
<tr>
<th align="center">控件</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">color</td>
<td align="center">主要用于选取颜色</td>
</tr>
<tr>
<td align="center">date</td>
<td align="center">日期</td>
</tr>
<tr>
<td align="center">time</td>
<td align="center">时间</td>
</tr>
<tr>
<td align="center">month</td>
<td align="center">月份</td>
</tr>
<tr>
<td align="center">week</td>
<td align="center">周</td>
</tr>
<tr>
<td align="center">number</td>
<td align="center">数值</td>
</tr>
<tr>
<td align="center">email</td>
<td align="center">包含 e-mail 地址的输入域</td>
</tr>
<tr>
<td align="center">file</td>
<td align="center">上传文件</td>
</tr>
<tr>
<td align="center">range</td>
<td align="center">滑块、拖拽条</td>
</tr>
<tr>
<td align="center">search</td>
<td align="center">搜索框</td>
</tr>
<tr>
<td align="center">url</td>
<td align="center">网址</td>
</tr>
</tbody></table>
<p>新增的智能感应：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  请输入您的乘车工具:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">list</span>=<span class="string">&quot;buy&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;buy&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>轿车<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>单车<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>拖拉机<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210929093435.png"></p>
<h2 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h2><p>在HTML5之前实现网页的视频音频需要使用flash，而现在使用video和audio标签就能插入视频和音频。</p>
<p>video 视频：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./assace/a.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span>你的浏览器不支持<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>video标签不支持，将会显示标签内文字</li>
<li>src属性后面是资源文件</li>
<li>controls属性是显示播放控件</li>
<li>autoplay属性是自动播放</li>
<li>loop属性循环播放</li>
<li>video支持的文件格式有mp4、ogv、webm格式</li>
</ul>
<p>audio音频：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./assace/a.mp3&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span>你的浏览器不支持<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>audio标签支持mp3、ogg格式</li>
<li>属性功能与video 相同</li>
</ul>
<h2 id="Canvas绘图"><a href="#Canvas绘图" class="headerlink" title="Canvas绘图"></a>Canvas绘图</h2><p>Canvas标签只是图形容器，必须使用脚本来绘制图形。由于Canvas有很多知识点，这里简单概括，后面有专门的文章</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">&quot;myCanvas&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #c3c3c3&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> c = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;myCanvas&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ctx = c.getContext(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    ctx.fillStyle = <span class="string">&#x27;#FF0000&#x27;</span>;</span></span><br><span class="line"><span class="javascript">    ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">75</span>);</span></span><br><span class="line"><span class="javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>canvas标签默认是没有任何视觉效果的，先给他创建宽和高，一个边框。</p>
<p>使用JavaScript脚本通过ID获取Dom</p>
<p>getContext(“2d”) 对象是内建的 HTML5 对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p>
<p>fillStyle 属性可以是CSS颜色，渐变，或图案。fillStyle默认设置是#000000（黑色）。</p>
<p>fillRect(x,y,width,height) 方法定义了矩形当前的填充方式。意思是：在画布上绘制 150x75 的矩形，从左上角开始 (0,0)</p>
<h2 id="地理定位"><a href="#地理定位" class="headerlink" title="地理定位"></a>地理定位</h2><p>在HTML5的标准中新增了地理位置这一功能，由JavaScript进行实现，由于国内网络环境，如果使用以下这个例子，大概率是不成功。</p>
<p>而想使用地理信息，就需要用到国内的地图平台，这里设计内容较多，后面文章在详细分析</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">     <span class="keyword">if</span> (navigator.geolocation) &#123;</span></span><br><span class="line"><span class="javascript">       navigator.geolocation.getCurrentPosition(onSuccess, onError);</span></span><br><span class="line"><span class="javascript">     &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">       alert(<span class="string">&#x27;您的浏览器不支持使用HTML 5来获取地理位置服务&#x27;</span>);</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">     <span class="comment">//定位数据获取成功响应</span></span></span><br><span class="line"><span class="javascript">     <span class="function"><span class="keyword">function</span> <span class="title">onSuccess</span>(<span class="params">position</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="built_in">document</span>.getElementById(<span class="string">&#x27;app&#x27;</span>).innerHTML =</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;纬度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.latitude +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;经度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.longitude +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;海拔: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.altitude +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;水平精度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.accuracy +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;\n&#x27;</span> +</span></span><br><span class="line"><span class="javascript">         <span class="string">&#x27;垂直精度: &#x27;</span> +</span></span><br><span class="line"><span class="javascript">         position.coords.altitudeAccura;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br><span class="line"><span class="javascript">     <span class="comment">//定位数据获取失败响应</span></span></span><br><span class="line"><span class="javascript">     <span class="function"><span class="keyword">function</span> <span class="title">onError</span>(<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">switch</span> (error.code) &#123;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.PERMISSION_DENIED:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;您拒绝对获取地理位置的请求&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.POSITION_UNAVAILABLE:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;位置信息是不可用的&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.TIMEOUT:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;请求您的地理位置超时&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">case</span> error.UNKNOWN_ERROR:</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">&#x27;未知错误&#x27;</span>);</span></span><br><span class="line"><span class="javascript">           <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">       &#125;</span></span><br><span class="line"><span class="javascript">     &#125;</span></span><br></pre></td></tr></table></figure>



<h2 id="拖放式API"><a href="#拖放式API" class="headerlink" title="拖放式API"></a>拖放式API</h2><p>　拖放是一种常见的特性，即抓取对象以后拖到另一个位置。在 HTML5 中，拖放是标准的一部分，任何元素都能够拖放。</p>
<p>　拖放的过程分为源对象和目标对象。源对象是指你即将拖动元素，而目标对象则是指拖动之后要放置的目标位置。</p>
<h2 id="Web-Worker（多线程）"><a href="#Web-Worker（多线程）" class="headerlink" title="Web Worker（多线程）"></a>Web Worker（多线程）</h2><p>web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。你可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。</p>
<h2 id="Web-Storage（数据存储）"><a href="#Web-Storage（数据存储）" class="headerlink" title="Web Storage（数据存储）"></a>Web Storage（数据存储）</h2><p>HTML5新增的数据存储有localstorage和sessionStorage，适合简单数据存储，WebSQL和IndexDB适合一些复杂的数据存储</p>
<h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><p>什么是webSocke？</p>
<ul>
<li>webSocke是网络传输协议，可在单个TCP连接上全双工通讯，位于OSI模型的应用层</li>
</ul>
<ul>
<li>webSocke是长连接的协议，实时的通讯，允许服务端推送消息到客户端，并且这种长连接并不会占用网络资源，这就好比一条流管道一样，不输送东西，当然不会造成资源的 流失。</li>
</ul>
<p>什么是全双功？</p>
<ul>
<li>在用一时刻，c端和S端能同时传输数据</li>
</ul>
<p>webSocke应用场景：</p>
<ul>
<li>大数据可视化，聊天、直播弹幕、游戏等需要实时数据的应用</li>
</ul>
<p>特点：</p>
<ul>
<li>TCP连接，与HTTP协议兼容</li>
<li>双向通信，主动推送</li>
<li>无同源限制，协议标识符是ws（加密wss）</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>HTML5新增许多特性和标准，大多是为适配当今互联网应用 复杂的需求，每个特性背后都有各自的应用场景和知识点。</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title>CSS3选择器</title>
    <url>/article/1f818b1f.html</url>
    <content><![CDATA[<p>作为HTML和CSS的桥梁，CSS3拥有众多的选择器，下面一一列举CSS的选择器</p>
<p>先来看下选择器的思维导图。</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210929215328.png"></p>
<h1 id="CSS2-1选择器"><a href="#CSS2-1选择器" class="headerlink" title="CSS2.1选择器"></a>CSS2.1选择器</h1><h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><p>标签选择器也称着元素选择器，就是选择HTML标签，这个标签不管嵌套多深，选择页面上所有该标签，由于覆盖面广，适合标签的初始化。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="comment">/*去除小圆点 */</span></span><br><span class="line">    <span class="attribute">list-style</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* 去除下划线 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h2><p>ID选择器原则上在页面只能存在一个名称，不能重名，虽然样式不会报错，但是在执行JavaScript脚本时则会报错。</p>
<p>命名规则：字母、数字、下划线、短横构成，<strong>不能数字开头</strong>，区分大小写</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#para1</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><p>class命名规范与ID相同，class可以相同页面多个相同类目，同一个标签可以多个类</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;warning spec&quot;</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.warning</span> &#123;</span></span><br><span class="line"><span class="css">   <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css"> &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.spec</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="css"> &#125;</span></span><br><span class="line"><span class="css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>选择该标签内部后代的选择器，使用<strong>空格隔开</strong>，下面的例子,选择了box类目里面所有类名为spec的标签，不管这标签嵌套多深，都会被选中。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.spec</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="交集选择器"><a href="#交集选择器" class="headerlink" title="交集选择器"></a>交集选择器</h3><p>选择即是什么又是什么的标签，只有两个标签符合了才会被选中。中间<strong>没有空格</strong>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-class">.spec</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>选择所有该标签，<strong>逗号隔开</strong>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><p>伪类是添加到选择器的描述性词语，指定要选择的元素的特殊状态。超级链接就拥有4个特殊的状态。</p>
<table>
<thead>
<tr>
<th align="center">伪类</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">a:link</td>
<td align="center">没有被访问的链接</td>
</tr>
<tr>
<td align="center">a:visited</td>
<td align="center">已经被访问的链接</td>
</tr>
<tr>
<td align="center">a:hover</td>
<td align="center">鼠标悬停的链接</td>
</tr>
<tr>
<td align="center">a:active</td>
<td align="center">正在被激活的链接</td>
</tr>
</tbody></table>
<blockquote>
<p>TIP:a标签的伪类一定要按顺序书写样式，否则伪类失效。</p>
</blockquote>
<h1 id="CSS3选择器"><a href="#CSS3选择器" class="headerlink" title="CSS3选择器"></a>CSS3选择器</h1><h2 id="元素关系选择器"><a href="#元素关系选择器" class="headerlink" title="元素关系选择器"></a>元素关系选择器</h2><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><p>当<strong>使用&gt;符号分隔</strong>两个元素时，它只会匹配那些作为<strong>第一个元素</strong>的直接后代元素，即两个标签为父子关系。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h3><p>相邻兄弟选择器，使用+符号连接两个选择器，有三个特点：同一父元素下的子元素，第一元素和第二元素是紧跟着的，他们是同级别的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> + <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>BOX的P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>BOX的P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>BOX的P标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="通用兄弟选择器"><a href="#通用兄弟选择器" class="headerlink" title="通用兄弟选择器"></a>通用兄弟选择器</h3><p>通用选择器使用<del>符号，a</del>b选择a元素<strong>之后</strong>所有<strong>同层级</strong>b元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">     <span class="selector-tag">h3</span> ~ <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">       <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">     &#125;</span></span><br><span class="line"><span class="css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>H3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 这两个会选中 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 选中 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span>&gt;</span>Span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20211001100734.png"></p>
<h2 id="序号选择器"><a href="#序号选择器" class="headerlink" title="序号选择器"></a>序号选择器</h2><p>选择该元素后面的第几个元素。</p>
<table>
<thead>
<tr>
<th align="center">举例</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">:first-child</td>
<td align="center">第一个子元素</td>
</tr>
<tr>
<td align="center">:last-child</td>
<td align="center">最后一个子元素</td>
</tr>
<tr>
<td align="center">:nth-child(n)</td>
<td align="center">第n个子元素</td>
</tr>
<tr>
<td align="center">:nth-of-type(n)</td>
<td align="center">第n个某类型子元素</td>
</tr>
<tr>
<td align="center">:nth-last-child</td>
<td align="center">倒数第n个</td>
</tr>
<tr>
<td align="center">:nth-last-of-type(n)</td>
<td align="center">倒数第n个某类型子元素</td>
</tr>
</tbody></table>
<h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><table>
<thead>
<tr>
<th align="center">举例</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">img[alt]</td>
<td align="center">选择有alt属性的img标签</td>
</tr>
<tr>
<td align="center">img[alt=”故宫”]</td>
<td align="center">选择有alt属性是故宫的img标签</td>
</tr>
<tr>
<td align="center">img[alt^=”北京”]</td>
<td align="center">选择有alt属性以北京<strong>开头</strong>的img标签</td>
</tr>
<tr>
<td align="center">img[alt$=”夜景”]</td>
<td align="center">选择有alt属性以夜景<strong>结尾</strong>的img标签</td>
</tr>
<tr>
<td align="center">img[alt*=”美”]</td>
<td align="center">选择有alt属性中<strong>含有</strong>美字样的img标签</td>
</tr>
<tr>
<td align="center">img[alt~=”手机拍摄”]</td>
<td align="center">选择有alt属性中有<strong>空格隔开</strong>的手机拍摄字样的img标签</td>
</tr>
<tr>
<td align="center">img[alt|=”参赛作品”]</td>
<td align="center">选择有alt属性以“参赛作品”<strong>开头</strong>的img标签</td>
</tr>
</tbody></table>
<h2 id="新增伪类选择器"><a href="#新增伪类选择器" class="headerlink" title="新增伪类选择器"></a>新增伪类选择器</h2><p>empty：选择空标签，空格不算空标签 </p>
<p>focus：选择当前获得焦点的表单元素</p>
<p>enabled：选择当前有效的表单元素</p>
<p>disabled：选择当前无效的表单元素</p>
<p>checked：选择当前已经勾选的单选按钮或者复选框</p>
<p>root：选择根元素，html标签</p>
<h2 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h2><ul>
<li><p><code>::before</code>：创建一个伪元素，其将成为匹配选中的元素的第一个子元素，必须设置content属性表示其中的内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&#x27;★&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>::after</code>：创建一个伪元素，其将成为匹配选中的元素的最后一个子元素，必须设置content属性表示其中的内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line"><span class="attribute">content</span>:<span class="string">&#x27;★&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>::selection</code>：文档被用户高亮的部分，使用鼠标圈选部分</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">::selection</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>::first-letter</code>：文档第一行第一个字(必须是块级元素)</p>
</li>
<li><p><code>::first-line</code>：文档第一行字(必须是块级元素)</p>
</li>
</ul>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo图床的解决方案</title>
    <url>/article/4c6068df.html</url>
    <content><![CDATA[<p>引子：网站链接嵌套得越深，越不利于SEO优化，Hexo默认链接是年月日标题，如果标题是中文，那么链接就会变成乱码，这很不利于搜索引擎的搜索，为了达到目的，我们会使用<code>hexo-abbrlink</code>插件来解决问题，但是我们需要上传图片，图片要么需要图床，不然你就只能附带博客里面，以下分析个人在遇到这个问题的取舍与想法，愿与诸君分享。</p>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><ul>
<li>我们需要利于SEO的网址</li>
<li>我们需要一个安全、稳定、足够、免费的图床</li>
<li>简单、最好一劳永逸</li>
</ul>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>我们知道，为了达到Hexo的链接优化，需要用到<code>hexo-abbrlink</code>这个插件，使用上传图片使用<code>hexo-asset-image</code>插件，这两个插件单独使用没有问题，但是一起使用就会出现问题，前者把路径改了，后者当然无法找到图片，网上也是一堆长篇大论，这里不在累赘，难道没有一劳永逸吗？</p>
<p>既然两者一起使用会出现问题，（<code>hexo-asset-image</code>插件作者曾提到这是hexo的编译原理，具体可以看官方的lssues）,那么就不一起使用，此路不通，另寻它路。其实最简单的方式就是使用图床功能，把一张图片放到别人的服务器，通过URL就能看到图片，简单快捷，</p>
<p>但是有几个问题：</p>
<ul>
<li><p>图片放在别人的服务器，不太安全</p>
</li>
<li><p>图床一般都需要收费，不可能给你白嫖</p>
</li>
<li><p>图床弄起来较为麻烦</p>
</li>
</ul>
<p>综合以上，其实我们可以利用Gitee来作为我们的图床，有以下几个原因</p>
<ul>
<li>使用<code>hexo-asset-image</code>插件图片本身也是存放在<code>gitee</code>，那么我们这样其实是一样的，只不过不用<code>hexo-asset-image</code>插件</li>
<li><code>Gitee</code>属于国内，速度更快</li>
<li>个人免费有5G的空间，如果只是博客，这个空间还是够的</li>
</ul>
<h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>既然使用Gitee来作为图床，当然不能重复提交代码仓库来实现，这里使用picGo工具，</p>
<p>官网：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>安装好的界面</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210926225740.png"></p>
<p>安装插件：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210926230424.png"></p>
<p>填写信息：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210926231011.png"></p>
<ul>
<li>用户名是注册时候的链接名，不是昵称！！</li>
<li>仓库名小写，直接写就行，不需要写路径</li>
<li>存放路径随意</li>
<li>令牌是<code>Gitee</code>私人令牌，不要给太多权限，第一个就行</li>
<li>图片只能1M上限，大于访问不了，需要登陆才可以有权限访问，这点可以自己测试</li>
</ul>
<h1 id="小工具"><a href="#小工具" class="headerlink" title="小工具"></a>小工具</h1><p>分享一个截图工具：snipaste，可以在win10商店里面下载即可。</p>
<p>官网：<a href="https://zh.snipaste.com/">https://zh.snipaste.com/</a></p>
<p>结合PicGo可以完美配合，复制粘贴上传，不用保存，截图大小也不是很大</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这个办法其实是脱离插件的使用，即满足了URL的优化，又能得到一个图床应用，体验下来还是很方便的，唯一缺点就是流程可能稍加繁琐，不过使用过程非常方便！还是值得推荐的！</p>
]]></content>
      <categories>
        <category>Hexo框架</category>
      </categories>
  </entry>
  <entry>
    <title>小破站正式上线</title>
    <url>/article/36e749dc.html</url>
    <content><![CDATA[<p>断断续续半年时间，使用<code>Hexo</code>已有很长一段时间，经历了不断的优化踩坑，最开始使用<code>NexT</code>做为博客主题，到后来使用了Butterfly主题，到对主题的一系列魔改，最终还是回归到<code>NexT</code>作为博客的主题。</p>
<p><code>NexT</code>主题相对来说较为简洁，使用Butterfly主题确实对博客有很大的美化程度，但不简约，最主要是在浏览器渲染上面，由于集成大量插件和动画特效，使得浏览时不是特别顺畅。</p>
<p>最终本博客去繁化简，只留下实用功能，对博客轻美化，让网站即顺畅又优美。</p>
<p>目前使用<code>GithubPages</code>加<code>GiteePages</code>双代码平台推送，测试下来，电信网络访问<code>githubPages</code>很大概率屏蔽，<code>GiteePages</code>需要手动更新，较为麻烦，<code>CDN</code>加速效果不明显，CI平台需要收取一定费用，介于目前情况，只能暂时如此，未来计划使用服务器搭建自己的CI平台进行自动化部署</p>
]]></content>
      <categories>
        <category>Hexo框架</category>
      </categories>
  </entry>
  <entry>
    <title>常用文本样式属性</title>
    <url>/article/90e0fc7e.html</url>
    <content><![CDATA[<p>CSS3提供了大量的文本字体样式属性，本文章介绍CSS常用文本样式属性</p>
<h1 id="Color属性"><a href="#Color属性" class="headerlink" title="Color属性"></a>Color属性</h1><ul>
<li>Color属性可以设置文本的前景色</li>
<li>属性值主要有英文、十六进制、rgb()、rgba()等表示法</li>
<li>具有继承性</li>
</ul>
<p>十六进制表示法：</p>
<p>#ff0000：三颜色，红绿蓝，ff是十进制的255，每种颜色都是0~255之间</p>
<p>rgb()表示法：</p>
<p>rgb(255,0,0)：三颜色，红绿蓝，ff是十进制的255，每种颜色都是0~255之间</p>
<p>rgba()表示法：IE9兼容</p>
<p>rgb(255,0,0, .65)：三颜色，红绿蓝，ff是十进制的255，每种颜色都是0<del>255之间，最后一位表示透明度，0</del>1之间</p>
<h1 id="font-size属性"><a href="#font-size属性" class="headerlink" title="font-size属性"></a>font-size属性</h1>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>文章锚点失效问题</title>
    <url>/article/26e0b522.html</url>
    <content><![CDATA[<p>在测试博客中发现文章锚点失效问题，特此记录以下</p>
<p>在 <code>Hexo</code> 更新至 5.x 版本，Next 更新至 7.x 版本后，会出现文章的中文目录点击跳转失效的 bug，本博客正式遇到此问题。</p>
<p>在控制台打印如下错误：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">utils.js:<span class="number">240</span> Uncaught <span class="built_in">TypeError</span>: Cannot read properties <span class="keyword">of</span> <span class="literal">null</span> (reading <span class="string">&#x27;getBoundingClientRect&#x27;</span>)</span><br><span class="line">    at HTMLAnchorElement.&lt;anonymous&gt; (utils.js:<span class="number">240</span>)</span><br></pre></td></tr></table></figure>

<p>翻看官方Issues得到解决方案：</p>
<p>链接：<a href="https://github.com/theme-next/hexo-theme-next/pull/1540/files">https://github.com/theme-next/hexo-theme-next/pull/1540/files</a></p>
<p>删除两行代码，增加两行代码：</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210927205653.png"></p>
]]></content>
      <categories>
        <category>Hexo框架</category>
      </categories>
      <tags>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>无题</title>
    <url>/article/9b44950b.html</url>
    <content><![CDATA[<p>欢乐和苦恼必然联系在一起：</p>
<p>每一个欢乐背后都隐藏着当这个欢乐失去后的苦恼，每一个苦恼背后都隐藏着，当这个苦恼失去后的快乐。</p>
<p><img src="https://gitee.com/bamboolsf/image-bed/raw/master/img/20210927235346.png"></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
